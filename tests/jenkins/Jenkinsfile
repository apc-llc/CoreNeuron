pipeline {
    agent {
        label 'bb5'
    }
    parameters {
        string(name: 'sha1', defaultValue: 'master',
               description: 'What branch of CoreNeuron to test.')
        string(name: 'SPACK_BRANCH', defaultValue: 'develop',
               description: 'Which branch of spack to use.')
        string(name: 'NEURON_BRANCH', defaultValue: '',
               description: 'Which branch of neuron to use. For master branch (neuron@develop) leave this parameter blank.')
    }

    environment {
        HOME = "${WORKSPACE}"
        JENKINS_DIR = "${WORKSPACE}/tests/jenkins"
    }

    stages {

        stage('install Spack'){
            steps {
                sh 'source $WORKSPACE/tests/jenkins/spack_setup.sh'
            }
        }

        stage('Spack installations'){
            steps {
                sh 'sh tests/jenkins/install_neuron_reportinglib.sh'
            }
        }

        stage('build CoreNeuron'){
            parallel{
                stage('AoS'){
                    stages{
                        stage('build'){
                            steps{
                                sh 'sh tests/jenkins/install_coreneuron.sh AoS'
                            }
                        }
                        stage('unit & ring tests'){
                            steps{
                                sh 'sh tests/jenkins/ringtest.sh AoS'
                            }
                        }
                    }
                }

                stage('SoA'){
                    stages{
                        stage('build'){
                            steps {
                                sh 'sh tests/jenkins/install_coreneuron.sh SoA'
                            }
                        }
                        stage('unit & ring tests'){
                            steps{
                                sh 'sh tests/jenkins/ringtest.sh SoA'
                            }
                        }
                    }
                }

                stage('GPU-non-unified'){
                    stages{
                        stage('build'){
                            steps {
                                sh 'sh tests/jenkins/install_coreneuron.sh GPU-non-unified'
                            }
                        }
                        stage('unit & ring tests'){
                            steps{
                                sh 'sh tests/jenkins/ringtest.sh GPU-non-unified'
                            }
                        }
                    }
                }

                stage('GPU-unified'){
                    stages{
                        stage('build'){
                            steps {
                                sh 'sh tests/jenkins/install_coreneuron.sh GPU-unified'
                            }
                        }
                        stage('unit & ring tests'){
                            steps{
                                sh 'sh tests/jenkins/ringtest.sh GPU-unified'
                            }
                        }
                    }
                }
            }
        }

        stage('neuron_direct'){
            parallel{
                stage('AoS'){
                    steps{
                        sh 'sh tests/jenkins/run_neuron_direct.sh AoS'
                    }
                }
                stage('SoA'){
                    steps{
                        sh 'sh tests/jenkins/run_neuron_direct.sh SoA'
                    }
                }
            }
        }

        stage('checkout tests'){
            parallel{
                stage('testcorenrn'){
                    steps{
                        dir('testcorenrn'){
                            git url: 'https://github.com/pramodk/testcorenrn.git'
                        }
                    }
                }
                stage('ringtest'){
                    steps{
                        dir('ringtest'){
                            git url: 'https://github.com/nrnhines/ringtest.git'
                        }
                    }
                }
                stage('tqperf'){
                    steps{
                        dir('tqperf'){
                            git url: 'https://github.com/nrnhines/tqperf.git'
                        }
                    }
                }
            }
        }

        stage('nrnivmodl'){
            parallel{
                stage('nrnivmodl testcorenrn'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl.sh testcorenrn'
                    }
                }
                stage('nrnivmodl ringtest'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl.sh ringtest'
                    }
                }
                stage('nrnivmodl tqperf'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl.sh tqperf'
                    }
                }
                stage('nrnivmodl-core testcorenrn AoS'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh testcorenrn AoS'
                    }
                }
                stage('nrnivmodl-core testcorenrn SoA'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh testcorenrn SoA'
                    }
                }
                stage('nrnivmodl-core ringtest AoS'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh ringtest AoS'
                    }
                }
                stage('nrnivmodl-core ringtest SoA'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh ringtest SoA'
                    }
                }
                stage('nrnivmodl-core tqperf AoS'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh tqperf AoS'
                    }
                }
                stage('nrnivmodl-core tqperf SoA'){
                    steps{
                        sh 'sh tests/jenkins/nrnivmodl-core.sh tqperf SoA'
                    }
                }
            }
        }

        stage('testcorenrn'){
            parallel{
                stage('deriv'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn deriv 1'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS deriv 1'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA deriv 1'
                            }
                        }
                    }
                }
                stage('gf'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn gf 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS gf 6'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA gf 6'
                            }
                        }
                    }
                }
                stage('kin'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn kin 1'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS kin 1'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA kin 1'
                            }
                        }
                    }
                }
                stage('conc'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn conc 1'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS conc 1'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA conc 1'
                            }
                        }
                    }
                }
                stage('watch'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn watch 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS watch 6'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA watch 6'
                            }
                        }
                    }
                }
                stage('bbcore'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn bbcore 1'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS bbcore 1'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA bbcore 1'
                            }
                        }
                    }
                }
                stage('vecplay'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn vecplay 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS vecplay 6'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA vecplay 6'
                            }
                        }
                    }
                }
                stage('patstim'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh testcorenrn patstim 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn AoS patstim 6'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh testcorenrn SoA patstim 6'
                            }
                        }
                    }
                }
                stage('ringtest parallel'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh ringtest ringtest 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh ringtest AoS ringtest 6'
                            }
                        }
                        stage('corenrn SoA 3 MPI Ranks'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh ringtest SoA ringtest 3'
                            }
                        }
                        stage('corenrn SoA 7 MPI Ranks'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh ringtest SoA ringtest 7'
                            }
                        }
                        stage('corenrn restore AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn_restore.sh AoS 6'
                            }
                        }
                        stage('corenrn restore SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn_restore.sh SoA 6'
                            }
                        }
                    }
                }
                stage('tqperf'){
                    stages{
                        stage('neuron'){
                            steps{
                                sh 'sh tests/jenkins/run_neuron.sh tqperf tqperf 6'
                            }
                        }
                        stage('corenrn AoS'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh tqperf AoS tqperf 6'
                            }
                        }
                        stage('corenrn SoA'){
                            steps{
                                sh 'sh tests/jenkins/run_corenrn.sh tqperf SoA tqperf 6'
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
